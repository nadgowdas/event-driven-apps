####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/order-command-quarkus-ms-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/order-command-quarkus-ms-jvm
#
###
### Stage 1 - Java Build
FROM ibmjava:8-sdk
LABEL maintainer="IBM Cloud Architecture Solution Engineering at IBM Cloud"

RUN apt-get update && \
 apt-get install -y maven
   

 # attach volumes
VOLUME /volume/gitrepo

# create working directory
RUN mkdir -p /local/gitrepo
WORKDIR /local/gitrepo
COPY src/ /local/gitrepo/src
COPY pom.xml /local/gitrepo/pom.xml


### Stage 2 - Docker Build
FROM fabric8/java-alpine-openjdk8-jre:1.6.5
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV AB_ENABLED=jmx_exporter

# Be prepared for running in OpenShift too
RUN adduser -G root --no-create-home --disabled-password 1001 \
  && chown -R 1001 /deployments \
  && chmod -R "g+rwX" /deployments \
#GITSECURE REMEDIATION 
RUN  apt-get update && apt-get install -y --fix-missing  


#COPY target/lib/* /deployments/lib/
#COPY target/*-runner.jar /deployments/app.jar
COPY --from=0 /local/gitrepo/target/lib/* /deployments/lib/
COPY --from=0 /local/gitrepo/target/*-runner.jar /deployments/app.jar
EXPOSE 8080

# run with user 1001
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]
